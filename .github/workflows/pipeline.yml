name: Build, Test and Deploy to Docker Hub

on:
  push:
    branches:
      - master  # or your default branch
    tags:
      - '*'
  pull_request:
    branches:
      - 'master'
  workflow_dispatch:

jobs:
  tests_test-all:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run Tests
        run: mvn test

  quality_sonarqube-analysis:
    name: 'quality > sonarqube-analysis'
    runs-on: ubuntu-latest
    needs: [tests_test-all]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=SOAT-46_ms-video-process

  docker_build-and-push:
    name: 'docker > build and push'
    runs-on: ubuntu-latest
    needs: [tests_test-all]
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Validate Docker Hub repository
        id: validate-repo
        run: |
          REPO_NAME="ms-video"
          NAMESPACE="${{ secrets.DOCKER_USERNAME }}"
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "https://hub.docker.com/v2/repositories/${NAMESPACE}/${REPO_NAME}/")

          if [ "$RESPONSE" -eq 200 ]; then
            echo "Repository ${NAMESPACE}/${REPO_NAME} exists."
          elif [ "$RESPONSE" -eq 404 ]; then
            echo "Repository ${NAMESPACE}/${REPO_NAME} does not exist."
            exit 1
          else
            echo "Failed to check repository existence. HTTP status code: ${RESPONSE}"
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/ms-video:latest
            ${{ secrets.DOCKER_USERNAME }}/ms-video:${{ github.sha }}
